openapi: 3.0.0
info:
  title: example
  description: "A sample command-line application."
  version: 1.2.3
servers:
  - url: "http://localhost:8080"
paths:
  /api-v1/chats/:
    put:
      tags:
        - ChatsController
      summary: batchChats
      operationId: batchChats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ChatCreateDto"
      responses:
        200:
          description: "Operation completed!"
    post:
      tags:
        - ChatsController
      summary: createChatForReport
      operationId: createChatForReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCreateDto"
      responses:
        200:
          description: "Operation completed!"
  /api-v1/messages/:
    get:
      tags:
        - MessagesController
      summary: fetchMessages
      operationId: fetchMessages
      parameters:
        - name: chatId
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Operation completed!"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MessageDto"
  /api-v1/messages/<messageId>:
    get:
      tags:
        - MessagesController
      summary: fetchMessage
      operationId: fetchMessage
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: "Operation completed!"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MessageDto"
components:
  schemas:
    ChatVisibility:
      title: ChatVisibility
      type: string
      format: string
      enum:
        - private
        - open
    ChatType:
      title: ChatType
      type: string
      format: string
      enum:
        - PV
        - CH
        - GR
    ChatCreateDto:
      title: ChatCreateDto
      type: object
      properties:
        title:
          type: string
        visibility:
          $ref: "#/components/schemas/ChatVisibility"
        type:
          $ref: "#/components/schemas/ChatType"
      required:
        - title
        - visibility
        - type
    MessageDto:
      title: MessageDto
      type: object
      properties:
        chatId:
          type: string
        description:
          type: string
        parent:
          $ref: "#/components/schemas/MessageDto"
      required:
        - chatId
        - description
tags:
  - name: ChatsController
  - name: MessagesController