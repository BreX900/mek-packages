name: mek_stripe_terminal
description: A StripeTerminal plugin to discover readers, connect to them and process payments.
version: 3.0.1
repository: https://github.com/BreX900/mek-packages/tree/main/stripe_terminal
topics:
  - stripe-terminal
  - mek-packages

environment:
  sdk: '>=3.0.0 <4.0.0'
  flutter: '>=3.10.0'

scripts:
  bootstrap: dart pub global activate index_generator

  # To generate library dart file
  build:library: index_generator
  # To generate code to communicate between flutter and various platforms
  build:api: dart run tool/generate_api.dart
  # To generate *.g.dart files
  build:runner: dart run build_runner watch --delete-conflicting-outputs

dependencies:
  flutter:
    sdk: flutter

  meta: ^1.9.1
  collection: ^1.17.0
  recase: ^4.1.0

  mek_data_class: ^1.4.0
  one_for_all: ^1.0.0

dev_dependencies:
  mek_lints: ^2.0.0

  path: ^1.8.3
  build_runner: ^2.4.6
  mek_data_class_generator: ^1.5.1

  one_for_all_generator: ^1.0.0

  flutter_test:
    sdk: flutter

dependency_overrides:
  one_for_all:
    path: ../one_for_all
  one_for_all_generator:
    path: ../one_for_all_generator

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # This section identifies this Flutter project as a plugin project.
  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)
  # which should be registered in the plugin registry. This is required for
  # using method channels.
  # The Android 'package' specifies package in which the registered class is.
  # This is required for using method channels on Android.
  # The 'ffiPlugin' specifies that native code should be built and bundled.
  # This is required for using `dart:ffi`.
  # All these are used by the tooling to maintain consistency when
  # adding or updating assets for this project.
  plugin:
    platforms:
      android:
        package: mek.stripeterminal
        pluginClass: TerminalPlugin
      ios:
        pluginClass: TerminalPlugin

  # To add assets to your plugin package, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  #
  # For details regarding assets in packages, see
  # https://flutter.dev/assets-and-images/#from-packages
  #
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # To add custom fonts to your plugin package, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts in packages, see
  # https://flutter.dev/custom-fonts/#from-packages

index_generator:
  exclude:
    - '**.g.dart'
    - '**.api.dart'
  # Define the paths of the folders in which to generate the index files
  indexes:
    - path: lib
      exclude:
        - src/platform/**
